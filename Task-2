1.1: 
------------------------------------------------

    class Person {
      String name;
      int age;

       Person(String name, int age) {
          this.name = name;
          this.age = age;
       }

      Person(String name) {
          this.name = name;
          this.age = 18;
      }

      void display() {
      System.out.println(“Name: “ + name + “, Age: “ + age);
      }
    }

1.2:
-------------------------------------------

    import java.util.Scanner;

    class Product {
    int pid;
    double price;
    int quantity;

    Product(int pid, double price, int quantity) {
    this.pid = pid;
    this.price = price;
    this.quantity = quantity;
    }
    }

    public class ProductMain {
    public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    Product[] products = new Product[5];

    for (int i = 0; i < 5; i++) {
    System.out.println(“Enter pid, price, quantity for product “ + (i + 1) + “:”);
    int pid = sc.nextInt();
    double price = sc.nextDouble();
    int quantity = sc.nextInt();
    products[i] = new Product(pid, price, quantity);
    }

    int highestPid = products[0].pid;
    double highestPrice = products[0].price;
    for (Product p : products) {
    if (p.price > highestPrice) {
    highestPrice = p.price;
    highestPid = p.pid;
    }
    }
    System.out.println(“Product with highest price has pid: “ + highestPid);

    double totalAmount = calculateTotal(products);
    System.out.println(“Total amount spent: “ + totalAmount);
    }

    public static double calculateTotal(Product[] products) {
    double total = 0;
    for (Product p : products) {
    total += p.price * p.quantity;
    }
    return total;
    }
    }

1.3:
-----------------------------------------------------
    class Account {
    double balance;

    Account() {
    balance = 0;
    }

    Account(double balance) {
    this.balance = balance;
    }

    void deposit(double amount) {
    balance += amount;
    System.out.println(“Deposited: “ + amount);
    }

    void withdraw(double amount) {
    if (amount <= balance) {
    balance -= amount;
    System.out.println(“Withdrawn: “ + amount);
    } else {
    System.out.println(“Insufficient balance.”);
    }
    }

    void displayBalance() {
    System.out.println(“Current Balance: “ + balance);
    }
    }

1.4:
------------------------------------------------

    class Person2 {
        String name;
        int age;

        Person2(String name, int age) {
          this.name = name;
          this.age = age;
        }
    }

    class Employee extends Person2 {
        int employeeID;
        double salary;

        Employee(String name, int age, int employeeID, double salary) {
          super(name, age); // Call parent constructor
          this.employeeID = employeeID;
          this.salary = salary;
        }

        void display() {
        System.out.println(“Name: “ + name + “, Age: “ + age +
          “, Employee ID: “ + employeeID + “, Salary: “ + salary);
        }
    }
